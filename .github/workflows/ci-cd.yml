name: ci-cd

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
  release:
    types: [published]

env:
  IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/mlops-capstone
  IMAGE_TAG: latest

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: '3.11' }
      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Unit tests
        run: python -m pytest -q
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build & Push
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }},${{ env.IMAGE_NAME }}:${{ github.sha }}
  deploy-on-release:
    needs: build-and-push
    if: github.event_name == 'release'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up kubectl
        uses: azure/setup-kubectl@v4
      - name: Configure kube
        run: |
          echo "${{ secrets.KUBE_CONFIG }}" | base64 -d > kubeconfig
          echo "KUBECONFIG=$PWD/kubeconfig" >> $GITHUB_ENV
          kubectl create ns mlops --dry-run=client -o yaml | kubectl apply -f - || true
      - name: Install Helm
        uses: azure/setup-helm@v4
      - name: Deploy chart
        run: |
          helm upgrade --install capstone ./deploy/helm/app             --namespace mlops             --set image.repository=${{ env.IMAGE_NAME }}             --set image.tag=${{ github.event.release.tag_name }}
